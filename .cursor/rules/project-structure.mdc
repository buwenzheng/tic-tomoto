# 项目结构规范

## 进程分层
- [src/main](mdc:src/main): Electron主进程，负责系统级功能
- [src/preload](mdc:src/preload): 预加载脚本，安全地暴露API
- [src/renderer](mdc:src/renderer): 渲染进程，实现用户界面

## 主进程结构
- core/: 核心功能模块（窗口管理、IPC等）
- features/: 业务功能模块（存储、更新等）
- services/: 后台服务
- utils/: 工具函数

## 预加载脚本结构
- api/: 按模块组织的API接口
- utils/: 工具函数

## 渲染进程结构
- components/: 通用组件
- features/: 功能模块
- layouts/: 布局组件
- pages/: 页面组件
- stores/: 状态管理
- utils/: 工具函数

## 命名规范
- 组件文件/目录: PascalCase
- 工具/配置文件: camelCase
- 样式文件: camelCase

## 模块组织
每个功能模块应包含：
- components/: 模块专用组件
- hooks/: 模块专用钩子
- stores/: 模块状态管理
- utils/: 模块工具函数
- types.ts: 类型定义
